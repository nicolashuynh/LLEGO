[project]
name = "llego"
version = "0.1.0"
description = "Decision Tree Induction Through LLMs via Semantically-Aware Evolution"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
keywords = ["decision tree", "llm", "language model", "machine", "learning", "ai"]
authors = [
  {name = "Tennison Liu", email = "tl522@cam.ac.uk "},
  {name = "Nicolas Huynh", email = "nicolas.huynh99@gmail.com" }
]
maintainers = [
  {name = "Tennison Liu", email = "tl522@cam.ac.uk "},
  {name = "Nicolas Huynh", email = "nicolas.huynh99@gmail.com" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Researchers",
  "Topic :: Machine Learning :: Decision Trees",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.9",
]
dependencies = [
  "aiohttp==3.9.4",
  "gosdt==0.1.8",
  "hydra-core==1.3.2",
  "langchain==0.2.1",
  "numpy==1.23.5",
  "omegaconf==2.3.0",
  "openai==0.28.0",
  "openml==0.14.2",
  "optuna==3.6.1",
  "pandas==1.3.5",
  "pytest==8.2.1",
  "PyYAML==6.0.1",
  "scikit_learn==1.3.2",
  "wandb==0.17.0",
  "cython"
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[project.optional-dependencies]
test = [
  "pytest",
  "coverage",
  "mypy",
  "black",
  "pytest-cov",
  "pytest-mypy",
  "pytest-black",
  "pytest-isort",
  "pytest-flakes",
  "pre-commit",
  "types-PyYAML"
]

[project.urls]
"Homepage" = "https://github.com/nicolashuynh/LLEGO"
"Source" = "https://github.com/nicolashuynh/LLEGO"

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --flakes --isort --mypy --cov --cov-report html --cov-report term"
testpaths = [
    "tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
exclude = [
    '^file1\.py$',  # TOML literal string (single-quotes, no escaping necessary)
    '.*wandb.*',
    '.*external.*',
]
ignore_missing_imports = true

[tool.isort]
profile = "black"